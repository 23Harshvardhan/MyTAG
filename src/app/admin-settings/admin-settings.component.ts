import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import axios from 'axios';
import { CookieService } from 'ngx-cookie-service';

@Component({
  selector: 'app-admin-settings',
  templateUrl: './admin-settings.component.html',
  styleUrls: ['./admin-settings.component.scss']
})
export class AdminSettingsComponent implements OnInit {

  constructor(
    private cookieService:CookieService,
    private router:Router
  ) { }

  cookie = {
    headers:{
      cki: this.cookieService.get("jwt")
    } 
  }

  ngOnInit(): void {
    this.checkToken();
  }

  //Function to verify if the user is a admin or not based on the cookies generated by the admin login page.
  checkToken() {
    axios.get('http://34.131.186.218/v1/api/admin', this.cookie)
    .then((response) => {
      //Do nothing
    })
    .catch((error) => {
      console.log(error);
      this.router.navigate(['/']);
    });
  }

  changeRootPass(creds : {Email:string, Username:string, Password:string, NewPassword:string}) {
    axios.put('http://34.131.186.218/v1/api/admin/updatepassword', creds, this.cookie)
    .then((response) => {
      alert("Root password has been changed successfully.");
    })
    .catch((error) => {
      console.log(error);
      alert("There was a problem. Please send console log to developer.")
    })
  }

  verifyUser(details: {UserID:string, Email:string, verification:string}) {
    // console.log(details);
    axios.put('http://34.131.186.218/v1/api/admin/updateuser/verify', details, this.cookie)
    .then((response) => {
      // console.log(response);
      alert("The verification status of the user was changed successfully.")
    })
    .catch((error) => {
      console.log(error);
      alert("There was a problem. Please send console log to developer.");
    })
  }
}
